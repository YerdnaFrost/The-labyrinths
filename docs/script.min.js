const mazeData=[["010101111110100100","111100010011111110","010111111010101011","010000011110100001","111111001010101011","100011101000111001","110110101101101111","000000101000100010","111111111111101111","010010001101100100","010111100100111101","110000110110000111","011110100011111100","000100111001000101","110110001101110101","010111111100011111","111101100101001001","110100110111111101"],["110111001001101011","010101111101001001","111101010111111101","110001000000100111","100111111111110010","110101000010010111","010001000111010101","111011110001000101","001110111011111100","101000001010001001","111010101111101111","101110100010101001","001011111110001100","111000101011111110","110011100010101011","010110101111101000","110010001001001111","111111111101011010"],["000110100100110101","010010101110100111","110110111011110100","010100100010011111","011111110111001011","110101010001011110","100001011101010011","111101000111111010","010111010101001011","010001011101101010","111011110001001110","100000010101011011","111111111111011110","010001000101110011","111011111100110110","010001010110011100","011111000111110111","110101011100100101"],["011111010101100111","000101110101111101","111101010100100100","000101110111110111","011100010100011100","010111010101110111","110001111100100101","111111010001110111","100011011111000110","111010000101010010","001010101101010111","111011111001010100","101110101011111110","100010001010000010","110111111010101111","010101010011101011","010100010110100010","111110111100111111"],["111001110101111111","101101010100010001","001001011111111011","101111001010001001","111001100010101101","010011111010100111","110110001010111101","010010101110101001","111110101011101111","100010111000001001","110111101110111011","010110000100010000","010100111111111101","111101100001010111","000100101101000100","011111101001011111","110010111101001010","011010010111100011"]];let history=[],currentState=null;function deepCopyState(_){let $={mazes:[]};for(let e of _.mazes){let t={cells:JSON.parse(JSON.stringify(e.cells)),paths:[]};for(let l of e.paths){let s={cells:new Map(l.cells),sources:new Set(l.sources),treasures:new Set(l.treasures),closeCells:new Set(l.closeCells)};t.paths.push(s)}$.mazes.push(t)}return $}function restoreState(_){currentState=deepCopyState(_)}function init(){currentState={mazes:[]};for(let _=0;_<mazeData.length;_++){let $=mazeData[_],e=$.length,t=$[0].length,l={cells:[],paths:[]};for(let s=0;s<e;s++){let r=[];for(let a=0;a<t;a++)r.push({isWall:"0"===$[s][a],isPath:"1"===$[s][a]});l.cells.push(r)}for(let n=0;n<e;n++)for(let o=0;o<t;o++)"1"===$[n][o]&&l.paths.push({cells:new Map([[`${o},${n}`,"current"]]),sources:new Set,treasures:new Set,closeCells:new Set});currentState.mazes.push(l)}history=[deepCopyState(currentState)],renderAllMazes(),updateStats()}function renderAllMazes(){for(let _=0;_<mazeData.length;_++)renderMaze(_)}function getCellColor(_,$,e){let t=_.cells[e][$];if(t.isWall)return"wall";let l=`${$},${e}`,s=!1,r=!1,a=!1,n=!1,o=!1;for(let c of _.paths){let u=c.cells.get(l);"current"===u&&(s=!0),c.sources.has(l)&&(r=!0),"visited"===u&&(a=!0),c.treasures.has(l)&&(n=!0),c.closeCells.has(l)&&(o=!0)}return s?"possible":o?"close":n?"treasure":r?"source":a?"visited":"path"}function renderMaze(_){let $=document.getElementById(`maze-${_}`),e=document.getElementById(`status-${_}`),t=currentState.mazes[_];if(!$)return;$.innerHTML="";let l=t.cells.length,s=t.cells[0].length;$.style.gridTemplateColumns=`repeat(${s}, 10px)`;for(let r=0;r<l;r++)for(let a=0;a<s;a++){let n=document.createElement("div");n.className="cell",n.classList.add(getCellColor(t,a,r)),$.appendChild(n)}let o=t.paths.length;e.textContent=`Активных путей: ${o}`}function updateStats(){let _=0,$=0;for(let e of currentState.mazes){let t=new Set,l=new Set;for(let s of e.paths){for(let[r,a]of s.cells)("visited"===a||"current"===a)&&t.add(r);for(let n of s.sources)t.add(n);for(let o of s.treasures)t.add(o),l.add(o);for(let c of s.closeCells)t.add(c)}_+=t.size,$+=l.size}document.getElementById("cells-passed").textContent=`Пройдено клеток: ${_}`,document.getElementById("treasure-collected").textContent=`Собрано добычи: ${$}`}function move(_){let $=deepCopyState(currentState);history.push($);let e=0,t=!1;for(let l=0;l<mazeData.length;l++){let s=currentState.mazes[l],r=mazeData[l],a=r.length,n=r[0].length,o=[];for(let c of s.paths){let u,d,i;for(let[f,h]of c.cells)if("current"===h){[u,d]=f.split(",").map(Number),i=f;break}if(void 0===u||void 0===d)continue;let p=u,m=d;switch(_){case"north":m--;break;case"south":m++;break;case"west":p--;break;case"east":p++}if(p>=0&&p<n&&m>=0&&m<a&&"1"===r[m][p]){let S={cells:new Map(c.cells),sources:new Set(c.sources),treasures:new Set(c.treasures),closeCells:new Set(c.closeCells)};S.cells.set(i,"visited"),S.cells.set(`${p},${m}`,"current"),o.push(S)}else t=!0}s.paths=o,e+=o.length}if(0===e&&t){alert("Вы определённо упёрлись в стену. Возвращаемся к предыдущему состоянию."),restoreState($),history.pop(),renderAllMazes(),updateStats();return}renderAllMazes(),updateStats()}function setSource(){history.push(deepCopyState(currentState));for(let _=0;_<currentState.mazes.length;_++){let $=currentState.mazes[_];for(let e of $.paths){let t=null;for(let[l,s]of e.cells)if("current"===s){t=l;break}t&&e.sources.add(t)}}renderAllMazes(),updateStats()}function setTreasure(){history.push(deepCopyState(currentState));for(let _=0;_<currentState.mazes.length;_++){let $=currentState.mazes[_];for(let e of $.paths){let t=null;for(let[l,s]of e.cells)if("current"===s){t=l;break}t&&e.treasures.add(t)}}renderAllMazes(),updateStats()}function setClose(){history.push(deepCopyState(currentState));for(let _=0;_<currentState.mazes.length;_++){let $=currentState.mazes[_];for(let e of $.paths){let t=null;for(let[l,s]of e.cells)if("current"===s){t=l;break}t&&e.closeCells.add(t)}}renderAllMazes(),updateStats()}function undo(){history.length>1&&(history.pop(),restoreState(history[history.length-1]),renderAllMazes(),updateStats())}function reset(){history=[],init()}window.onload=function(){init(),document.getElementById("north").addEventListener("click",()=>move("north")),document.getElementById("south").addEventListener("click",()=>move("south")),document.getElementById("west").addEventListener("click",()=>move("west")),document.getElementById("east").addEventListener("click",()=>move("east")),document.getElementById("close").addEventListener("click",setClose),document.getElementById("set-source").addEventListener("click",setSource),document.getElementById("set-treasure").addEventListener("click",setTreasure),document.getElementById("undo").addEventListener("click",undo),document.getElementById("reset").addEventListener("click",reset),console.log("%c\uD83D\uDD2E Определитель Лабиринта","font-size: 20px; color: #4CAF50; font-weight: bold;"),console.log("%cАвтор: YerdnaFrost","color: #2196F3;"),console.log("%cСоздано с помощью JavaScript","color: #FF5722;")};